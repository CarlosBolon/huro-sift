<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_visualizer_8cpp" kind="file">
    <compoundname>Visualizer.cpp</compoundname>
    <includes refid="_visualizer_8h" local="yes">Visualizer.h</includes>
    <incdepgraph>
      <node id="426">
        <label>Visualizer.h</label>
        <link refid="_visualizer_8h"/>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="428">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="427">
        <label>string</label>
      </node>
      <node id="425">
        <label>Core/src/Visualizer.cpp</label>
        <link refid="Visualizer.cpp"/>
        <childnode refid="426" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_visualizer_8h" kindref="compound">Visualizer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cv;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_visualizer_1a3611c9e093d8d855f72bcad4757ce188" refkind="member"><highlight class="normal"><ref refid="class_visualizer_1a3611c9e093d8d855f72bcad4757ce188" kindref="member" tooltip="Constructor.">Visualizer::Visualizer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">:<sp/><sp/><sp/>fontFace_(FONT_HERSHEY_SIMPLEX),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>fontScale_(0.5),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>fontColor_(Scalar::all(-1)),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>fontThickness_(1)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_visualizer_1a28c30d39ef9921a98d5b714ef1256186" refkind="member"><highlight class="normal"><ref refid="class_visualizer_1a28c30d39ef9921a98d5b714ef1256186" kindref="member" tooltip="Destructor.">Visualizer::~Visualizer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_visualizer_1a8c905f72fdc7db2ecd53ffe473340bf7" refkind="member"><highlight class="normal"><ref refid="class_visualizer" kindref="compound" tooltip="Singleton window and image display manager class.">Visualizer</ref>*<sp/><ref refid="class_visualizer_1a8c905f72fdc7db2ecd53ffe473340bf7" kindref="member" tooltip="Instance getter.">Visualizer::GetInstance</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_visualizer" kindref="compound" tooltip="Singleton window and image display manager class.">Visualizer</ref>*<sp/>visualizer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_visualizer_1a3611c9e093d8d855f72bcad4757ce188" kindref="member" tooltip="Constructor.">Visualizer</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visualizer;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_visualizer_1a910624091174d29faaa5c958215e1fd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_visualizer_1a910624091174d29faaa5c958215e1fd6" kindref="member" tooltip="Creates a window and show an image within it.">Visualizer::ShowImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>image,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitForKey)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>imshow(name,<sp/>image);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(waitForKey)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitKey(0);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_visualizer_1a0287f07ff905b861c4ce10a9af90d9f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_visualizer_1a0287f07ff905b861c4ce10a9af90d9f4" kindref="member" tooltip="Renders the specified text string in the image.">Visualizer::PutText</ref>(Mat&amp;<sp/>image,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>text,<sp/>Point&amp;<sp/>org)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/>fgColor<sp/>=<sp/>(<ref refid="class_visualizer_1adc3d19a03ae171272bc5737df927027b" kindref="member" tooltip="Text color.">fontColor_</ref><sp/>==<sp/>Scalar::all(-1)<sp/>?<sp/>Scalar::all(255)<sp/>:<sp/><ref refid="class_visualizer_1adc3d19a03ae171272bc5737df927027b" kindref="member" tooltip="Text color.">fontColor_</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Scalar<sp/>bgColor<sp/>=<sp/>(<ref refid="class_visualizer_1adc3d19a03ae171272bc5737df927027b" kindref="member" tooltip="Text color.">fontColor_</ref><sp/>==<sp/>Scalar::all(-1)<sp/>?<sp/>Scalar::all(0)<sp/>:<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scalar(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="class_visualizer_1adc3d19a03ae171272bc5737df927027b" kindref="member" tooltip="Text color.">fontColor_</ref>[0]<sp/>+<sp/>255)<sp/>%<sp/>255,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="class_visualizer_1adc3d19a03ae171272bc5737df927027b" kindref="member" tooltip="Text color.">fontColor_</ref>[1]<sp/>+<sp/>255)<sp/>%<sp/>255,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="class_visualizer_1adc3d19a03ae171272bc5737df927027b" kindref="member" tooltip="Text color.">fontColor_</ref>[2]<sp/>+<sp/>255)<sp/>%<sp/>255,<sp/>0));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>putText(image,<sp/>text,<sp/>org,<sp/><ref refid="class_visualizer_1a0aa6d2b6b8db04a4242fbfec555c88d1" kindref="member" tooltip="Font type.">fontFace_</ref>,<sp/><ref refid="class_visualizer_1a9b91ed2be01274b57be07c01545ff802" kindref="member" tooltip="Font scale factor that is multiplied by the font-specific base size.">fontScale_</ref>,<sp/>bgColor,<sp/><ref refid="class_visualizer_1a5438944d7404d76256e5d0fb4ddecdaf" kindref="member" tooltip="Thickness of the lines used to draw a text.">fontThickness_</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>putText(image,<sp/>text,<sp/>org,<sp/><ref refid="class_visualizer_1a0aa6d2b6b8db04a4242fbfec555c88d1" kindref="member" tooltip="Font type.">fontFace_</ref>,<sp/><ref refid="class_visualizer_1a9b91ed2be01274b57be07c01545ff802" kindref="member" tooltip="Font scale factor that is multiplied by the font-specific base size.">fontScale_</ref>,<sp/>fgColor,<sp/><ref refid="class_visualizer_1a5438944d7404d76256e5d0fb4ddecdaf" kindref="member" tooltip="Thickness of the lines used to draw a text.">fontThickness_</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_visualizer_1a51483ef2ff4337305b7ca06728eb3f1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_visualizer_1a51483ef2ff4337305b7ca06728eb3f1f" kindref="member" tooltip="Sets the text&amp;#39;s properties.">Visualizer::SetTextProperties</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontFace,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fontScale,<sp/>Scalar<sp/>fontColor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontThickness)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_visualizer_1a0aa6d2b6b8db04a4242fbfec555c88d1" kindref="member" tooltip="Font type.">fontFace_</ref><sp/>=<sp/>fontFace;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_visualizer_1a9b91ed2be01274b57be07c01545ff802" kindref="member" tooltip="Font scale factor that is multiplied by the font-specific base size.">fontScale_</ref><sp/>=<sp/>fontScale;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_visualizer_1adc3d19a03ae171272bc5737df927027b" kindref="member" tooltip="Text color.">fontColor_</ref><sp/>=<sp/>fontColor;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_visualizer_1a5438944d7404d76256e5d0fb4ddecdaf" kindref="member" tooltip="Thickness of the lines used to draw a text.">fontThickness_</ref><sp/>=<sp/>fontThickness;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/src/Visualizer.cpp"/>
  </compounddef>
</doxygen>
