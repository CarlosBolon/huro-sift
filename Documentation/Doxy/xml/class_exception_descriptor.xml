<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="class_exception_descriptor" kind="class" prot="public">
    <compoundname>ExceptionDescriptor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">exception</basecompoundref>
    <includes refid="_exception_descriptor_8h" local="no">ExceptionDescriptor.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_exception_descriptor_1a9a0ee9381ed48d3d315a9e091be1d817" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ExceptionDescriptor::error_</definition>
        <argsstring></argsstring>
        <name>error_</name>
        <briefdescription>
<para>Error message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="49" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_exception_descriptor_1a28d43a19c103c7622e5fb225d9ac81bc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ExceptionDescriptor::fileName_</definition>
        <argsstring></argsstring>
        <name>fileName_</name>
        <briefdescription>
<para>Name of the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="50" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_exception_descriptor_1a338c02c76b2631e1948b3d15dd256c5f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ExceptionDescriptor::funcName_</definition>
        <argsstring></argsstring>
        <name>funcName_</name>
        <briefdescription>
<para>Name of the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="51" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_exception_descriptor_1ae59cb81febf52e97aac91bcc5006c4f0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ExceptionDescriptor::isError_</definition>
        <argsstring></argsstring>
        <name>isError_</name>
        <briefdescription>
<para>Error or abnormal operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="53" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_exception_descriptor_1aa6b8d6a6cadfe9e645409bb1ab8fd788" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ExceptionDescriptor::line_</definition>
        <argsstring></argsstring>
        <name>line_</name>
        <briefdescription>
<para>Line number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="52" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_exception_descriptor_1abd7c2af705e7d6d9f2310fa676e1a74c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExceptionDescriptor::ExceptionDescriptor</definition>
        <argsstring>(const std::string &amp;error, const std::string &amp;fileName, const std::string &amp;funcName, int line, bool isError=true)</argsstring>
        <name>ExceptionDescriptor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>funcName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isError</declname>
          <defval>true</defval>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Error message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file in which the exception was raised. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>funcName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the function in which the exception was raised. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of line on which the exception was raised. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isError</parametername>
</parameternamelist>
<parameterdescription>
<para>Error or abnormal operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
Should be used through the macro NewError(message) or NewWarning(message). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="31"/>
      </memberdef>
      <memberdef kind="function" id="class_exception_descriptor_1a0d0840e46e4874851fcb4cb74767eeb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExceptionDescriptor::ExceptionDescriptor</definition>
        <argsstring>(const ExceptionDescriptor &amp;e)</argsstring>
        <name>ExceptionDescriptor</name>
        <param>
          <type>const <ref refid="class_exception_descriptor" kindref="compound">ExceptionDescriptor</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Another <ref refid="class_exception_descriptor" kindref="compound">ExceptionDescriptor</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="37" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/src/ExceptionDescriptor.cpp" bodystart="21" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_exception_descriptor_1accf5a093a12051f43c439aa5435b581a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExceptionDescriptor::~ExceptionDescriptor</definition>
        <argsstring>(void)</argsstring>
        <name>~ExceptionDescriptor</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="40" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/src/ExceptionDescriptor.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_exception_descriptor_1a9796603ac150535b2986f307bb4e6f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ExceptionDescriptor::TraceError</definition>
        <argsstring>(void)</argsstring>
        <name>TraceError</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Write the exception description to stderr. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="46" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/src/ExceptionDescriptor.cpp" bodystart="39" bodyend="56"/>
        <referencedby refid="_main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="_main_8cpp" startline="8" endline="40">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_exception_descriptor_1a9976a798b37f87e8e60d893e0ccaa86c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ExceptionDescriptor::what</definition>
        <argsstring>(void) const </argsstring>
        <name>what</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>std::exception::what() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="43" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/src/ExceptionDescriptor.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exception class. </para>    </briefdescription>
    <detaileddescription>
<para>Exception class whose instances store an error message, source file, function and line number. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="85">
        <label>ExceptionDescriptor</label>
        <link refid="class_exception_descriptor"/>
        <childnode refid="86" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="87">
        <label>ExceptionDescriptor</label>
        <link refid="class_exception_descriptor"/>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" line="14" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ExceptionDescriptor.h" bodystart="13" bodyend="54"/>
    <listofallmembers>
      <member refid="class_exception_descriptor_1a9a0ee9381ed48d3d315a9e091be1d817" prot="private" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>error_</name></member>
      <member refid="class_exception_descriptor_1abd7c2af705e7d6d9f2310fa676e1a74c" prot="public" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>ExceptionDescriptor</name></member>
      <member refid="class_exception_descriptor_1a0d0840e46e4874851fcb4cb74767eeb3" prot="public" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>ExceptionDescriptor</name></member>
      <member refid="class_exception_descriptor_1a28d43a19c103c7622e5fb225d9ac81bc" prot="private" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>fileName_</name></member>
      <member refid="class_exception_descriptor_1a338c02c76b2631e1948b3d15dd256c5f" prot="private" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>funcName_</name></member>
      <member refid="class_exception_descriptor_1ae59cb81febf52e97aac91bcc5006c4f0" prot="private" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>isError_</name></member>
      <member refid="class_exception_descriptor_1aa6b8d6a6cadfe9e645409bb1ab8fd788" prot="private" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>line_</name></member>
      <member refid="class_exception_descriptor_1a9796603ac150535b2986f307bb4e6f1b" prot="public" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>TraceError</name></member>
      <member refid="class_exception_descriptor_1a9976a798b37f87e8e60d893e0ccaa86c" prot="public" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>what</name></member>
      <member refid="class_exception_descriptor_1accf5a093a12051f43c439aa5435b581a" prot="public" virt="non-virtual"><scope>ExceptionDescriptor</scope><name>~ExceptionDescriptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
