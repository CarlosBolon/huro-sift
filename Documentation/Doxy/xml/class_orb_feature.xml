<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="class_orb_feature" kind="class" prot="public">
    <compoundname>OrbFeature</compoundname>
    <basecompoundref refid="class_feature" prot="public" virt="non-virtual">Feature</basecompoundref>
    <includes refid="_orb_feature_8h" local="no">OrbFeature.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_orb_feature_1af74609fa7b56d5dea19c9460f42b25ab" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbFeature::edgeThreshold_</definition>
        <argsstring></argsstring>
        <name>edgeThreshold_</name>
        <briefdescription>
<para>This is size of the border where the features are not detected. It should roughly match the patchSize parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="50" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_orb_feature_1a1c1e186a9f2bc54c38f54f3c1e8f7d0f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbFeature::firstLevel_</definition>
        <argsstring></argsstring>
        <name>firstLevel_</name>
        <briefdescription>
<para>It should be 0 in the current implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="51" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="51" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_orb_feature_1a8fb8ef05ff3dff5ffee90c6f41e83cb2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbFeature::nFeatures_</definition>
        <argsstring></argsstring>
        <name>nFeatures_</name>
        <briefdescription>
<para>The maximum number of features to retain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="47" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_orb_feature_1abfb07330bd1a63270f935e1317111300" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbFeature::nlevels_</definition>
        <argsstring></argsstring>
        <name>nlevels_</name>
        <briefdescription>
<para>The number of pyramid levels. The smallest level will have linear size equal to input_image_linear_size/pow(scaleFactor, nlevels). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="49" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_orb_feature_1afbddce112b372099591a6ec049aff0f5" prot="private" static="no" mutable="no">
        <type>cv::OrbFeatureDetector *</type>
        <definition>cv::OrbFeatureDetector* OrbFeature::orbDetector_</definition>
        <argsstring></argsstring>
        <name>orbDetector_</name>
        <briefdescription>
<para>Wrapped OpenCV ORB object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="45" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aed4e5d5b4410041d3c8374dbd929f2ef" compoundref="_orb_feature_8cpp" startline="19" endline="22">~OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1af814e3440b61e6bf13b44ef8886ad2d0" compoundref="_orb_feature_8cpp" startline="50" endline="57">Process</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_orb_feature_1ae7f8a68d8b86f650348bc213c43f593a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbFeature::patchSize_</definition>
        <argsstring></argsstring>
        <name>patchSize_</name>
        <briefdescription>
<para>Size of the patch used by the oriented BRIEF descriptor. Of course, on smaller pyramid layers the perceived image area covered by a feature will be larger. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="54" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="54" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_orb_feature_1a8cbd44d79e8952dd7b51be32d1eaddee" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float OrbFeature::scaleFactor_</definition>
        <argsstring></argsstring>
        <name>scaleFactor_</name>
        <briefdescription>
<para>Pyramid decimation ratio, greater than 1. scaleFactor==2 means the classical pyramid, where each next level has 4x less pixels than the previous, but such a big scale factor will degrade feature matching scores dramatically. On the other hand, too close to 1 scale factor will mean that to cover certain scale range you will need more pyramid levels and so the speed will suffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="48" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="48" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_orb_feature_1a9a4454ef09254b94d88d0b599ad84218" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbFeature::scoreType_</definition>
        <argsstring></argsstring>
        <name>scoreType_</name>
        <briefdescription>
<para>he default HARRIS_SCORE means that Harris algorithm is used to rank features (the score is written to KeyPoint::score and is used to retain best nfeatures features); FAST_SCORE is alternative value of the parameter that produces slightly less stable keypoints, but it is a little faster to compute. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="53" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="53" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_orb_feature_1a05cc269e6833e1f25c7f7c31928a5ef6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OrbFeature::wtaK_</definition>
        <argsstring></argsstring>
        <name>wtaK_</name>
        <briefdescription>
<para>The number of points that produce each element of the oriented BRIEF descriptor. The default value 2 means the BRIEF where we take a random point pair and compare their brightnesses, so we get 0/1 response. Other possible values are 3 and 4. For example, 3 means that we take 3 random points (of course, those point coordinates are random, but they are generated from the pre-defined seed, so each element of BRIEF descriptor is computed deterministically from the pixel rectangle), find point of maximum brightness and output index of the winner (0, 1 or 2). Such output will occupy 2 bits, and therefore it will need a special variant of Hamming distance, denoted as NORM_HAMMING2 (2 bits per bin). When WTA_K=4, we take 4 random points to compute each bin (that will also occupy 2 bits with possible values 0, 1, 2 or 3). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="52" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OrbFeature::OrbFeature</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>OrbFeature</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the current feature extraction procedure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="21" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/src/OrbFeature.cpp" bodystart="10" bodyend="17"/>
        <references refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</references>
        <references refid="class_orb_feature_1afbddce112b372099591a6ec049aff0f5" compoundref="_orb_feature_8h" startline="45">orbDetector_</references>
        <references refid="class_orb_feature_1a8fb8ef05ff3dff5ffee90c6f41e83cb2" compoundref="_orb_feature_8h" startline="47">nFeatures_</references>
        <references refid="class_orb_feature_1a8cbd44d79e8952dd7b51be32d1eaddee" compoundref="_orb_feature_8h" startline="48">scaleFactor_</references>
        <references refid="class_orb_feature_1abfb07330bd1a63270f935e1317111300" compoundref="_orb_feature_8h" startline="49">nlevels_</references>
        <references refid="class_orb_feature_1af74609fa7b56d5dea19c9460f42b25ab" compoundref="_orb_feature_8h" startline="50">edgeThreshold_</references>
        <references refid="class_orb_feature_1a1c1e186a9f2bc54c38f54f3c1e8f7d0f" compoundref="_orb_feature_8h" startline="51">firstLevel_</references>
        <references refid="class_orb_feature_1a05cc269e6833e1f25c7f7c31928a5ef6" compoundref="_orb_feature_8h" startline="52">wtaK_</references>
        <references refid="class_orb_feature_1a9a4454ef09254b94d88d0b599ad84218" compoundref="_orb_feature_8h" startline="53">scoreType_</references>
        <references refid="class_orb_feature_1ae7f8a68d8b86f650348bc213c43f593a" compoundref="_orb_feature_8h" startline="54">patchSize_</references>
      </memberdef>
      <memberdef kind="function" id="class_orb_feature_1aed4e5d5b4410041d3c8374dbd929f2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OrbFeature::~OrbFeature</definition>
        <argsstring>(void)</argsstring>
        <name>~OrbFeature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="24" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/src/OrbFeature.cpp" bodystart="19" bodyend="22"/>
        <references refid="class_orb_feature_1afbddce112b372099591a6ec049aff0f5" compoundref="_orb_feature_8h" startline="45">orbDetector_</references>
      </memberdef>
      <memberdef kind="function" id="class_thread_1a8f33f7750321d5df9188033e7e3e300d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * Thread::Join</definition>
        <argsstring>(void)</argsstring>
        <name>Join</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/Thread.h" line="43" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/src/Thread.cpp" bodystart="93" bodyend="100"/>
        <references refid="class_thread_1a8a7056f4641e224b016506ec0fc1078b" compoundref="_thread_8h" startline="64">Thread::threadID_</references>
        <references refid="_exception_descriptor_8h_1a0190803a2d1c92c40c81ad31caad1fee" compoundref="_exception_descriptor_8h" startline="56">ExceptionError</references>
        <references refid="class_thread_1a56c923629f0131b37a2b8c1f74a1e2b0" compoundref="_thread_8h" startline="68">Thread::result_</references>
      </memberdef>
      <memberdef kind="function" id="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OrbFeature::LoadSettingsFromFileStorage</definition>
        <argsstring>(void)</argsstring>
        <name>LoadSettingsFromFileStorage</name>
        <reimplements refid="class_feature_1afcf9f70e2258f918ae0f18ab78d77992">LoadSettingsFromFileStorage</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Implemented virtual method for loading algorithm specific settings from the given storage. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_feature_1afcf9f70e2258f918ae0f18ab78d77992" kindref="member">Feature::LoadSettingsFromFileStorage()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="30" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/src/OrbFeature.cpp" bodystart="24" bodyend="48"/>
        <references refid="_local_settings_8h_1a2229e3307a6b7ebe72c4459cad648ff4" compoundref="_local_settings_8h" startline="10">LocalSettingsPtr</references>
        <references refid="class_feature_1a46e9fc1f327aaafb10de2c0425d311aa" compoundref="_feature_8h" startline="48">Feature::name_</references>
        <references refid="_exception_descriptor_8h_1a0190803a2d1c92c40c81ad31caad1fee" compoundref="_exception_descriptor_8h" startline="56">ExceptionError</references>
        <references refid="class_orb_feature_1a8fb8ef05ff3dff5ffee90c6f41e83cb2" compoundref="_orb_feature_8h" startline="47">nFeatures_</references>
        <references refid="class_orb_feature_1a8cbd44d79e8952dd7b51be32d1eaddee" compoundref="_orb_feature_8h" startline="48">scaleFactor_</references>
        <references refid="class_orb_feature_1abfb07330bd1a63270f935e1317111300" compoundref="_orb_feature_8h" startline="49">nlevels_</references>
        <references refid="class_orb_feature_1af74609fa7b56d5dea19c9460f42b25ab" compoundref="_orb_feature_8h" startline="50">edgeThreshold_</references>
        <references refid="class_orb_feature_1a1c1e186a9f2bc54c38f54f3c1e8f7d0f" compoundref="_orb_feature_8h" startline="51">firstLevel_</references>
        <references refid="class_orb_feature_1a05cc269e6833e1f25c7f7c31928a5ef6" compoundref="_orb_feature_8h" startline="52">wtaK_</references>
        <references refid="class_orb_feature_1ae7f8a68d8b86f650348bc213c43f593a" compoundref="_orb_feature_8h" startline="54">patchSize_</references>
        <references refid="class_orb_feature_1a9a4454ef09254b94d88d0b599ad84218" compoundref="_orb_feature_8h" startline="53">scoreType_</references>
        <referencedby refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" compoundref="_orb_feature_8cpp" startline="10" endline="17">OrbFeature</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_feature_1af261b9c5cac5ff1fb628317c7009c845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Feature::SetFrame</definition>
        <argsstring>(const cv::Mat &amp;frame)</argsstring>
        <name>SetFrame</name>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Connects a frame to the feature extractor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Output parameter for the current frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" line="33" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/src/Feature.cpp" bodystart="20" bodyend="27"/>
        <references refid="class_feature_1aa805e6fee8eeec2061feabe29430f0df" compoundref="_feature_8h" startline="49">Feature::frame_</references>
        <references refid="class_feature_1ac666ae973c3840be1b3b9183dd12b8c1" compoundref="_feature_8h" startline="35">Feature::keyPoints</references>
        <references refid="class_feature_1a1b176bd48aad30b553e0f87f0264c3d0" compoundref="_feature_8h" startline="50">Feature::procTime_</references>
        <references refid="class_feature_1a857c4955b0325d8b96c863d873bf8db5" compoundref="_feature_8h" startline="36">Feature::descriptors</references>
      </memberdef>
      <memberdef kind="function" id="class_thread_1a2b42f82341afd2747ea093b6ac8b91cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Thread::Start</definition>
        <argsstring>(void)</argsstring>
        <name>Start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Starts the thread. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/Thread.h" line="40" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/Core/src/Thread.cpp" bodystart="47" bodyend="90"/>
        <references refid="class_thread_1a2fbeb3f285f074698a3323bfdd7e5d2a" compoundref="_thread_8h" startline="66">Thread::threadAttribute_</references>
        <references refid="_exception_descriptor_8h_1a0190803a2d1c92c40c81ad31caad1fee" compoundref="_exception_descriptor_8h" startline="56">ExceptionError</references>
        <references refid="class_thread_1a2b6b46b7eb56cffef7d0722649956c5d" compoundref="_thread_8h" startline="65">Thread::detached_</references>
        <references refid="class_thread_1a4e2c7c71f666a7c4404f8fc03a57f2d7" compoundref="_thread_8h" startline="67">Thread::runnable_</references>
        <references refid="class_thread_1a8a7056f4641e224b016506ec0fc1078b" compoundref="_thread_8h" startline="64">Thread::threadID_</references>
        <references refid="class_thread_1a9698abb1d7e2aed626b1963635455840" compoundref="_thread_8cpp" startline="36" endline="45">Thread::StartThread</references>
        <references refid="class_thread_1a215c9e3a0965e061e7d36aa5adfe4791" compoundref="_thread_8cpp" startline="25" endline="34">Thread::StartThreadRunnable</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_orb_feature_1a907fdd9790d0295f129f1ecdc4382031" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OrbFeature::DrawFeatures</definition>
        <argsstring>(void)</argsstring>
        <name>DrawFeatures</name>
        <reimplements refid="class_feature_1afcc4cc593c475cd67068c535e5bb4108">DrawFeatures</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Implemented virtual method for displaying the output. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_feature_1afcc4cc593c475cd67068c535e5bb4108" kindref="member">Feature::DrawFeatures()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="43" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/src/OrbFeature.cpp" bodystart="59" bodyend="62"/>
        <references refid="class_feature_1aa805e6fee8eeec2061feabe29430f0df" compoundref="_feature_8h" startline="49">Feature::frame_</references>
        <references refid="class_feature_1ac666ae973c3840be1b3b9183dd12b8c1" compoundref="_feature_8h" startline="35">Feature::keyPoints</references>
      </memberdef>
      <memberdef kind="function" id="class_orb_feature_1af814e3440b61e6bf13b44ef8886ad2d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OrbFeature::Process</definition>
        <argsstring>(void)</argsstring>
        <name>Process</name>
        <reimplements refid="class_feature_1ad9e3aebe506fc936c6ad18f9fc9543db">Process</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Implemented virtual method for the algorithm. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_feature_1ad9e3aebe506fc936c6ad18f9fc9543db" kindref="member">Feature::Process()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="37" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/src/OrbFeature.cpp" bodystart="50" bodyend="57"/>
        <references refid="class_orb_feature_1afbddce112b372099591a6ec049aff0f5" compoundref="_orb_feature_8h" startline="45">orbDetector_</references>
        <references refid="class_feature_1aa805e6fee8eeec2061feabe29430f0df" compoundref="_feature_8h" startline="49">Feature::frame_</references>
        <references refid="class_feature_1ac666ae973c3840be1b3b9183dd12b8c1" compoundref="_feature_8h" startline="35">Feature::keyPoints</references>
        <references refid="class_feature_1a857c4955b0325d8b96c863d873bf8db5" compoundref="_feature_8h" startline="36">Feature::descriptors</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_feature_1a857c4955b0325d8b96c863d873bf8db5" prot="public" static="no" mutable="no">
        <type>cv::Mat</type>
        <definition>cv::Mat Feature::descriptors</definition>
        <argsstring></argsstring>
        <name>descriptors</name>
        <briefdescription>
<para>The output matrix of descriptors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" line="36" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" bodystart="36" bodyend="-1"/>
        <referencedby refid="class_feature_1af261b9c5cac5ff1fb628317c7009c845" compoundref="_feature_8cpp" startline="20" endline="27">Feature::SetFrame</referencedby>
        <referencedby refid="class_orb_feature_1af814e3440b61e6bf13b44ef8886ad2d0" compoundref="_orb_feature_8cpp" startline="50" endline="57">Process</referencedby>
        <referencedby refid="class_sift_feature_1a73513198ca8ff4e56be059521cfb60f5" compoundref="_sift_feature_8cpp" startline="39" endline="46">SiftFeature::Process</referencedby>
        <referencedby refid="class_surf_feature_1a965b300a64e776f48c1fe1564f4c4269" compoundref="_surf_feature_8cpp" startline="43" endline="50">SurfFeature::Process</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_feature_1ac666ae973c3840be1b3b9183dd12b8c1" prot="public" static="no" mutable="no">
        <type>std::vector&lt; cv::KeyPoint &gt;</type>
        <definition>std::vector&lt;cv::KeyPoint&gt; Feature::keyPoints</definition>
        <argsstring></argsstring>
        <name>keyPoints</name>
        <briefdescription>
<para>Stores keypoints, i.e. a point feature found by one of many available keypoint detectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" line="35" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="class_feature_1af261b9c5cac5ff1fb628317c7009c845" compoundref="_feature_8cpp" startline="20" endline="27">Feature::SetFrame</referencedby>
        <referencedby refid="class_feature_1a6efeb0289e7a1e11e09a3cbd86a6ae31" compoundref="_feature_8cpp" startline="44" endline="54">Feature::Visualize</referencedby>
        <referencedby refid="class_mser_feature_1ad96a1235b0c0df21e68c5a2742debacb" compoundref="_mser_feature_8cpp" startline="44" endline="48">MserFeature::Process</referencedby>
        <referencedby refid="class_mser_feature_1abed40317b412e0046df5772367d4f3dc" compoundref="_mser_feature_8cpp" startline="50" endline="53">MserFeature::DrawFeatures</referencedby>
        <referencedby refid="class_orb_feature_1af814e3440b61e6bf13b44ef8886ad2d0" compoundref="_orb_feature_8cpp" startline="50" endline="57">Process</referencedby>
        <referencedby refid="class_orb_feature_1a907fdd9790d0295f129f1ecdc4382031" compoundref="_orb_feature_8cpp" startline="59" endline="62">DrawFeatures</referencedby>
        <referencedby refid="class_sift_feature_1a73513198ca8ff4e56be059521cfb60f5" compoundref="_sift_feature_8cpp" startline="39" endline="46">SiftFeature::Process</referencedby>
        <referencedby refid="class_sift_feature_1ae82e144ac3fed861dc0770cefaa828a6" compoundref="_sift_feature_8cpp" startline="48" endline="51">SiftFeature::DrawFeatures</referencedby>
        <referencedby refid="class_star_feature_1adb169936e9f60620b81894b48764a801" compoundref="_star_feature_8cpp" startline="40" endline="43">StarFeature::Process</referencedby>
        <referencedby refid="class_star_feature_1a6bb4f1e6808f0043707eb3c0bff1e33d" compoundref="_star_feature_8cpp" startline="45" endline="48">StarFeature::DrawFeatures</referencedby>
        <referencedby refid="class_surf_feature_1a965b300a64e776f48c1fe1564f4c4269" compoundref="_surf_feature_8cpp" startline="43" endline="50">SurfFeature::Process</referencedby>
        <referencedby refid="class_surf_feature_1a2f036e794ebd63cd024dbf547765442f" compoundref="_surf_feature_8cpp" startline="52" endline="55">SurfFeature::DrawFeatures</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_feature_1aa805e6fee8eeec2061feabe29430f0df" prot="protected" static="no" mutable="no">
        <type>cv::Mat</type>
        <definition>cv::Mat Feature::frame_</definition>
        <argsstring></argsstring>
        <name>frame_</name>
        <briefdescription>
<para>The current frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" line="49" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_feature_1af261b9c5cac5ff1fb628317c7009c845" compoundref="_feature_8cpp" startline="20" endline="27">Feature::SetFrame</referencedby>
        <referencedby refid="class_feature_1a6cc5fc9cbbd8ec566a72fe98fe0d0f86" compoundref="_feature_8cpp" startline="29" endline="42">Feature::Run</referencedby>
        <referencedby refid="class_feature_1a6efeb0289e7a1e11e09a3cbd86a6ae31" compoundref="_feature_8cpp" startline="44" endline="54">Feature::Visualize</referencedby>
        <referencedby refid="class_mser_feature_1ad96a1235b0c0df21e68c5a2742debacb" compoundref="_mser_feature_8cpp" startline="44" endline="48">MserFeature::Process</referencedby>
        <referencedby refid="class_mser_feature_1abed40317b412e0046df5772367d4f3dc" compoundref="_mser_feature_8cpp" startline="50" endline="53">MserFeature::DrawFeatures</referencedby>
        <referencedby refid="class_orb_feature_1af814e3440b61e6bf13b44ef8886ad2d0" compoundref="_orb_feature_8cpp" startline="50" endline="57">Process</referencedby>
        <referencedby refid="class_orb_feature_1a907fdd9790d0295f129f1ecdc4382031" compoundref="_orb_feature_8cpp" startline="59" endline="62">DrawFeatures</referencedby>
        <referencedby refid="class_sift_feature_1a73513198ca8ff4e56be059521cfb60f5" compoundref="_sift_feature_8cpp" startline="39" endline="46">SiftFeature::Process</referencedby>
        <referencedby refid="class_sift_feature_1ae82e144ac3fed861dc0770cefaa828a6" compoundref="_sift_feature_8cpp" startline="48" endline="51">SiftFeature::DrawFeatures</referencedby>
        <referencedby refid="class_star_feature_1adb169936e9f60620b81894b48764a801" compoundref="_star_feature_8cpp" startline="40" endline="43">StarFeature::Process</referencedby>
        <referencedby refid="class_star_feature_1a6bb4f1e6808f0043707eb3c0bff1e33d" compoundref="_star_feature_8cpp" startline="45" endline="48">StarFeature::DrawFeatures</referencedby>
        <referencedby refid="class_surf_feature_1a965b300a64e776f48c1fe1564f4c4269" compoundref="_surf_feature_8cpp" startline="43" endline="50">SurfFeature::Process</referencedby>
        <referencedby refid="class_surf_feature_1a2f036e794ebd63cd024dbf547765442f" compoundref="_surf_feature_8cpp" startline="52" endline="55">SurfFeature::DrawFeatures</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_feature_1a46e9fc1f327aaafb10de2c0425d311aa" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Feature::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
<para>Name of the current feature extraction procedure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" line="48" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" bodystart="48" bodyend="-1"/>
        <referencedby refid="class_feature_1a6efeb0289e7a1e11e09a3cbd86a6ae31" compoundref="_feature_8cpp" startline="44" endline="54">Feature::Visualize</referencedby>
        <referencedby refid="class_mser_feature_1ae6c9bca2395a33ecac78a46e9c331979" compoundref="_mser_feature_8cpp" startline="25" endline="42">MserFeature::LoadSettingsFromFileStorage</referencedby>
        <referencedby refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" compoundref="_orb_feature_8cpp" startline="24" endline="48">LoadSettingsFromFileStorage</referencedby>
        <referencedby refid="class_sift_feature_1af19316d789598f612ee150deb2ee5137" compoundref="_sift_feature_8cpp" startline="24" endline="37">SiftFeature::LoadSettingsFromFileStorage</referencedby>
        <referencedby refid="class_star_feature_1a0a46cb80a6a4d45e324757b4ef679e81" compoundref="_star_feature_8cpp" startline="25" endline="38">StarFeature::LoadSettingsFromFileStorage</referencedby>
        <referencedby refid="class_surf_feature_1a3717dc5d5cffd77f4f31c5ac81cd391a" compoundref="_surf_feature_8cpp" startline="24" endline="41">SurfFeature::LoadSettingsFromFileStorage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_feature_1a1b176bd48aad30b553e0f87f0264c3d0" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Feature::procTime_</definition>
        <argsstring></argsstring>
        <name>procTime_</name>
        <briefdescription>
<para>Processing time of the current feature extraction method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" line="50" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/Feature.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_feature_1af261b9c5cac5ff1fb628317c7009c845" compoundref="_feature_8cpp" startline="20" endline="27">Feature::SetFrame</referencedby>
        <referencedby refid="class_feature_1a6cc5fc9cbbd8ec566a72fe98fe0d0f86" compoundref="_feature_8cpp" startline="29" endline="42">Feature::Run</referencedby>
        <referencedby refid="class_feature_1a6efeb0289e7a1e11e09a3cbd86a6ae31" compoundref="_feature_8cpp" startline="44" endline="54">Feature::Visualize</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for extracting ORB features. </para>    </briefdescription>
    <detaileddescription>
<para>Class implementing the ORB (oriented BRIEF) keypoint detector and descriptor extractor. The algorithm uses FAST in pyramids to detect stable keypoints, selects the strongest features using FAST or Harris response, finds their orientation using first-order moments and computes the descriptors using BRIEF (where the coordinates of random point pairs (or k-tuples) are rotated according to the measured orientation).</para><para>See paper: Ethan Rublee, Vincent Rabaud, Kurt Konolige, Gary R. Bradski: ORB: An efficient alternative to SIFT or SURF. ICCV 2011: 2564-2571. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="92">
        <label>OrbFeature</label>
        <link refid="class_orb_feature"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>Thread</label>
        <link refid="class_thread"/>
      </node>
      <node id="93">
        <label>Feature</label>
        <link refid="class_feature"/>
        <childnode refid="94" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="95">
        <label>OrbFeature</label>
        <link refid="class_orb_feature"/>
        <childnode refid="96" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>Thread</label>
        <link refid="class_thread"/>
      </node>
      <node id="96">
        <label>Feature</label>
        <link refid="class_feature"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" line="15" bodyfile="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/include/OrbFeature.h" bodystart="14" bodyend="55"/>
    <listofallmembers>
      <member refid="class_feature_1a857c4955b0325d8b96c863d873bf8db5" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>descriptors</name></member>
      <member refid="class_orb_feature_1a907fdd9790d0295f129f1ecdc4382031" prot="private" virt="virtual"><scope>OrbFeature</scope><name>DrawFeatures</name></member>
      <member refid="class_orb_feature_1af74609fa7b56d5dea19c9460f42b25ab" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>edgeThreshold_</name></member>
      <member refid="class_feature_1a020e991990bb6ca904015ffa7902d55f" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>Feature</name></member>
      <member refid="class_orb_feature_1a1c1e186a9f2bc54c38f54f3c1e8f7d0f" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>firstLevel_</name></member>
      <member refid="class_feature_1aa805e6fee8eeec2061feabe29430f0df" prot="protected" virt="non-virtual"><scope>OrbFeature</scope><name>frame_</name></member>
      <member refid="class_thread_1a8f33f7750321d5df9188033e7e3e300d" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>Join</name></member>
      <member refid="class_feature_1ac666ae973c3840be1b3b9183dd12b8c1" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>keyPoints</name></member>
      <member refid="class_orb_feature_1aa13ad1fbc5869dcabb55611e5c206ebd" prot="public" virt="virtual"><scope>OrbFeature</scope><name>LoadSettingsFromFileStorage</name></member>
      <member refid="class_feature_1a46e9fc1f327aaafb10de2c0425d311aa" prot="protected" virt="non-virtual"><scope>OrbFeature</scope><name>name_</name></member>
      <member refid="class_orb_feature_1a8fb8ef05ff3dff5ffee90c6f41e83cb2" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>nFeatures_</name></member>
      <member refid="class_orb_feature_1abfb07330bd1a63270f935e1317111300" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>nlevels_</name></member>
      <member refid="class_orb_feature_1afbddce112b372099591a6ec049aff0f5" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>orbDetector_</name></member>
      <member refid="class_orb_feature_1a27e8b7a9c9ad36abd4119d1feb98f874" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>OrbFeature</name></member>
      <member refid="class_orb_feature_1ae7f8a68d8b86f650348bc213c43f593a" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>patchSize_</name></member>
      <member refid="class_orb_feature_1af814e3440b61e6bf13b44ef8886ad2d0" prot="private" virt="virtual"><scope>OrbFeature</scope><name>Process</name></member>
      <member refid="class_feature_1a1b176bd48aad30b553e0f87f0264c3d0" prot="protected" virt="non-virtual"><scope>OrbFeature</scope><name>procTime_</name></member>
      <member refid="class_orb_feature_1a8cbd44d79e8952dd7b51be32d1eaddee" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>scaleFactor_</name></member>
      <member refid="class_orb_feature_1a9a4454ef09254b94d88d0b599ad84218" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>scoreType_</name></member>
      <member refid="class_feature_1af261b9c5cac5ff1fb628317c7009c845" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>SetFrame</name></member>
      <member refid="class_thread_1a2b42f82341afd2747ea093b6ac8b91cb" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>Start</name></member>
      <member refid="class_thread_1a027b9eb38e4d59c076501b305b42f575" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>Thread</name></member>
      <member refid="class_thread_1a403714feecd93ac10c101a47b7649204" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>Thread</name></member>
      <member refid="class_orb_feature_1a05cc269e6833e1f25c7f7c31928a5ef6" prot="private" virt="non-virtual"><scope>OrbFeature</scope><name>wtaK_</name></member>
      <member refid="class_feature_1ab6dfcfe22cc71c7b45a61d991b4ff775" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>~Feature</name></member>
      <member refid="class_orb_feature_1aed4e5d5b4410041d3c8374dbd929f2ef" prot="public" virt="non-virtual"><scope>OrbFeature</scope><name>~OrbFeature</name></member>
      <member refid="class_thread_1af1e25588ebe47a2a6d79ef8c686a992b" prot="public" virt="virtual"><scope>OrbFeature</scope><name>~Thread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
