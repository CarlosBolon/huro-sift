<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_image_frame_8h" kind="file">
    <compoundname>ImageFrame.h</compoundname>
    <includes local="yes">opencv2/opencv.hpp</includes>
    <includedby refid="_image_frame_8cpp" local="yes">Core/src/ImageFrame.cpp</includedby>
    <includedby refid="_huro_algorithm_8cpp" local="yes">ObjectRecognition/src/HuroAlgorithm.cpp</includedby>
    <incdepgraph>
      <node id="325">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="324">
        <label>Core/include/ImageFrame.h</label>
        <link refid="ImageFrame.h"/>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="327">
        <label>Core/src/ImageFrame.cpp</label>
        <link refid="_image_frame_8cpp"/>
      </node>
      <node id="326">
        <label>Core/include/ImageFrame.h</label>
        <link refid="ImageFrame.h"/>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>ObjectRecognition/src/HuroAlgorithm.cpp</label>
        <link refid="_huro_algorithm_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_image_frame" prot="public">ImageFrame</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>4251)<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;opencv2/opencv.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"></codeline>
<codeline lineno="12" refid="class_image_frame" refkind="compound"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C++&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="keyword">__declspec(dllexport)</highlight><highlight class="normal"><sp/><ref refid="class_image_frame" kindref="compound" tooltip="Image frame wrapper class.">ImageFrame</ref><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_image_frame_1a117419148b5bcc26cc145d3f2f186bad" kindref="member" tooltip="Constructor.">ImageFrame</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cameraId);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_image_frame_1a117419148b5bcc26cc145d3f2f186bad" kindref="member" tooltip="Constructor.">ImageFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>imageName);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_frame_1a2f365f54366e61d0fffe41a2e24ba570" kindref="member" tooltip="Destructor.">~ImageFrame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/><ref refid="class_image_frame_1a886d65831c708b65ba5596aab1aca438" kindref="member" tooltip="Gets a frame from somewhere.">GetFrame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="class_image_frame_1a1f8ba0c6c7f724a41f5f5fef19bfe035" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::VideoCapture<sp/><ref refid="class_image_frame_1a1f8ba0c6c7f724a41f5f5fef19bfe035" kindref="member" tooltip="Temporary capture for getting frame.">cap_</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="class_image_frame_1a6aaede1e96c67711280696df991b4508" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/><ref refid="class_image_frame_1a6aaede1e96c67711280696df991b4508" kindref="member" tooltip="Loaded or captured image.">frame_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/include/ImageFrame.h"/>
  </compounddef>
</doxygen>
