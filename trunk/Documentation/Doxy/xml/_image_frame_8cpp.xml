<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_image_frame_8cpp" kind="file">
    <compoundname>ImageFrame.cpp</compoundname>
    <includes refid="_image_frame_8h" local="yes">ImageFrame.h</includes>
    <includes refid="_local_settings_8h" local="yes">LocalSettings.h</includes>
    <includes refid="_exception_descriptor_8h" local="yes">ExceptionDescriptor.h</includes>
    <incdepgraph>
      <node id="504">
        <label>Core/src/ImageFrame.cpp</label>
        <link refid="ImageFrame.cpp"/>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
      </node>
      <node id="506">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="508">
        <label>string</label>
      </node>
      <node id="510">
        <label>exception</label>
      </node>
      <node id="505">
        <label>ImageFrame.h</label>
        <link refid="_image_frame_8h"/>
        <childnode refid="506" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>ExceptionDescriptor.h</label>
        <link refid="_exception_descriptor_8h"/>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
      </node>
      <node id="507">
        <label>LocalSettings.h</label>
        <link refid="_local_settings_8h"/>
        <childnode refid="508" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecv">cv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_image_frame_8h" kindref="compound">ImageFrame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_local_settings_8h" kindref="compound">LocalSettings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_exception_descriptor_8h" kindref="compound">ExceptionDescriptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cv;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_image_frame_1a117419148b5bcc26cc145d3f2f186bad" refkind="member"><highlight class="normal"><ref refid="class_image_frame_1a117419148b5bcc26cc145d3f2f186bad" kindref="member" tooltip="Constructor.">ImageFrame::ImageFrame</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cameraId<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cap_.open(cameraId);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cap_.isOpened())</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="_exception_descriptor_8h_1a0190803a2d1c92c40c81ad31caad1fee" kindref="member">ExceptionError</ref>(</highlight><highlight class="stringliteral">&quot;Capture<sp/>is<sp/>not<sp/>opened!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="class_image_frame_1a117419148b5bcc26cc145d3f2f186bad" kindref="member" tooltip="Constructor.">ImageFrame::ImageFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>imageName)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>cap_.open(<ref refid="_local_settings_8h_1a2229e3307a6b7ebe72c4459cad648ff4" kindref="member">LocalSettingsPtr</ref>-&gt;GetImageDirectory()<sp/>+<sp/>imageName);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cap_.isOpened())</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="_exception_descriptor_8h_1a0190803a2d1c92c40c81ad31caad1fee" kindref="member">ExceptionError</ref>(</highlight><highlight class="stringliteral">&quot;Capture<sp/>is<sp/>not<sp/>opened!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_image_frame_1a2f365f54366e61d0fffe41a2e24ba570" refkind="member"><highlight class="normal"><ref refid="class_image_frame_1a2f365f54366e61d0fffe41a2e24ba570" kindref="member" tooltip="Destructor.">ImageFrame::~ImageFrame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_image_frame_1a886d65831c708b65ba5596aab1aca438" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/><ref refid="class_image_frame_1a886d65831c708b65ba5596aab1aca438" kindref="member" tooltip="Gets a frame from somewhere.">ImageFrame::GetFrame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cap_<sp/>&gt;&gt;<sp/>frame_;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(frame_.empty())</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="_exception_descriptor_8h_1a0190803a2d1c92c40c81ad31caad1fee" kindref="member">ExceptionError</ref>(</highlight><highlight class="stringliteral">&quot;Frame<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame_;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Code/huro-sift/Development/ObjectRecognition/Core/src/ImageFrame.cpp"/>
  </compounddef>
</doxygen>
