<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="_lbp_feature_8cpp" kind="file">
    <compoundname>LbpFeature.cpp</compoundname>
    <includes refid="_lbp_feature_8h" local="yes">LbpFeature.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="_local_settings_8h" local="yes">LocalSettings.h</includes>
    <includes refid="_exception_descriptor_8h" local="yes">ExceptionDescriptor.h</includes>
    <incdepgraph>
      <node id="684">
        <label>Runnable.h</label>
        <link refid="_runnable_8h"/>
      </node>
      <node id="678">
        <label>LocalFeature.h</label>
        <link refid="_local_feature_8h"/>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
      </node>
      <node id="680">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="679">
        <label>string</label>
      </node>
      <node id="688">
        <label>exception</label>
      </node>
      <node id="683">
        <label>pthread.h</label>
      </node>
      <node id="687">
        <label>ExceptionDescriptor.h</label>
        <link refid="_exception_descriptor_8h"/>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
      </node>
      <node id="681">
        <label>Thread.h</label>
        <link refid="_thread_8h"/>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
      </node>
      <node id="685">
        <label>iostream</label>
      </node>
      <node id="686">
        <label>LocalSettings.h</label>
        <link refid="_local_settings_8h"/>
        <childnode refid="679" relation="include">
        </childnode>
      </node>
      <node id="677">
        <label>LbpFeature.h</label>
        <link refid="_lbp_feature_8h"/>
        <childnode refid="678" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>FeatureExtractor/src/LbpFeature.cpp</label>
        <link refid="LbpFeature.cpp"/>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_lbp_feature_8h" kindref="compound">LbpFeature.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_local_settings_8h" kindref="compound">LocalSettings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_exception_descriptor_8h" kindref="compound">ExceptionDescriptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cv;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_lbp_feature_1a52b160f5fa16bc1ea0c489a744ed554f" refkind="member"><highlight class="normal"><ref refid="class_lbp_feature_1a52b160f5fa16bc1ea0c489a744ed554f" kindref="member" tooltip="Constructor.">LbpFeature::LbpFeature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>type)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_local_feature" kindref="compound" tooltip="Abstract class for local feature extraction.">LocalFeature</ref>(name,<sp/>type)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_lbp_feature_1a39ac99c8b8537ac9d104ae4368177071" kindref="member" tooltip="Implemented virtual method for loading algorithm specific settings from the given storage...">LoadSettingsFromFileStorage</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_lbp_feature_1a40826a6cc5bc5f1de7edf8b05092052b" refkind="member"><highlight class="normal"><ref refid="class_lbp_feature_1a40826a6cc5bc5f1de7edf8b05092052b" kindref="member" tooltip="Destructor.">LbpFeature::~LbpFeature</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_lbp_feature_1a39ac99c8b8537ac9d104ae4368177071" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lbp_feature_1a39ac99c8b8537ac9d104ae4368177071" kindref="member" tooltip="Implemented virtual method for loading algorithm specific settings from the given storage...">LbpFeature::LoadSettingsFromFileStorage</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>fileName<sp/>=<sp/><ref refid="_local_settings_8h_1a2229e3307a6b7ebe72c4459cad648ff4" kindref="member">LocalSettingsPtr</ref>-&gt;GetSettingsDirectory()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Settings.&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_local_feature_1a0e73ef0aed82c04f06b6eeb9a9b9be8b" kindref="member" tooltip="Name of the current feature extraction procedure.">name_</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.xml&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>FileStorage<sp/>fileStorage(fileName,<sp/>FileStorage::READ,<sp/></highlight><highlight class="stringliteral">&quot;UTF-8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fileStorage.isOpened())</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="_exception_descriptor_8h_1a0190803a2d1c92c40c81ad31caad1fee" kindref="member">ExceptionError</ref>(</highlight><highlight class="stringliteral">&quot;Setting<sp/>XML<sp/>does<sp/>not<sp/>exist<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_local_feature_1a0e73ef0aed82c04f06b6eeb9a9b9be8b" kindref="member" tooltip="Name of the current feature extraction procedure.">name_</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>fsUseUniformPatterns;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>fileStorage[</highlight><highlight class="stringliteral">&quot;useUniformPatterns&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>fsUseUniformPatterns;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_lbp_feature_1a6025f411377d4b6e56aa9eb5daff07e8" kindref="member">useUniformPatterns_</ref><sp/>=<sp/>(fsUseUniformPatterns.compare(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_lbp_feature_1a773b1c3fd663f58b01f1ba33a897744f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lbp_feature_1a773b1c3fd663f58b01f1ba33a897744f" kindref="member" tooltip="Initalizing the variables.">LbpFeature::ProcessInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref><sp/>=<sp/>Mat(<ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.rows,<sp/><ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.cols,<sp/>CV_8UC1);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_local_feature_1a1c7b8087feb05f02b09eb1b536d443e6" kindref="member" tooltip="The current frame.">outputFrame_</ref><sp/>=<sp/>Mat(<ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.rows<sp/>-<sp/>2,<sp/><ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.cols<sp/>-<sp/>2,<sp/>CV_8UC1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>cvtColor(<ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>,<sp/><ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>,<sp/>CV_BGR2GRAY,<sp/>0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equalizeHist(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>,<sp/><ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_lbp_feature_1af664c189044d32f2cb71b334deb6f0c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lbp_feature_1af664c189044d32f2cb71b334deb6f0c7" kindref="member" tooltip="Implemented virtual method for the algorithm.">LbpFeature::Process</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1a6025f411377d4b6e56aa9eb5daff07e8" kindref="member">useUniformPatterns_</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>.resize(944,<sp/>0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lbp_feature_1aa29955bd43f95dcac63aa7840fcd1925" kindref="member" tooltip="Generate feature vector with using uniform patterns.">ProcessWithUniformPatterns</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>.resize(<ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.rows<sp/>*<sp/><ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.cols,<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lbp_feature_1a96e42213e77e729c263236db12453bde" kindref="member" tooltip="Generate feature vector without using uniform patterns.">ProcessWithoutUniformPatterns</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_lbp_feature_1aa29955bd43f95dcac63aa7840fcd1925" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lbp_feature_1aa29955bd43f95dcac63aa7840fcd1925" kindref="member" tooltip="Generate feature vector with using uniform patterns.">LbpFeature::ProcessWithUniformPatterns</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uniform[58]<sp/>=<sp/>{<sp/>0,1,2,3,4,6,7,8,12,14,15,16,24,28,30,31,32,48,56,60,62,63,64,96,112,120,124,126,127,128,129,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>131,134,135,140,143,159,191,192,199,207,223,224,225,227,231,239,240,241,243,247,248,249,251,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>252,253,254,255<sp/>};<sp/></highlight><highlight class="comment">//<sp/>the<sp/>uniform<sp/>patterns<sp/>that<sp/>we<sp/>use<sp/>in<sp/>mode<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.rows-1;<sp/>i++)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/><ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.cols-1;<sp/>j++)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>center<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>lbp_center<sp/>=<sp/><ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i,j);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i-1,<sp/>j-1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>128;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i-1,<sp/>j+0)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>64;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i-1,<sp/>j+1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>32;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+0,<sp/>j+1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+1,<sp/>j+1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+1,<sp/>j+0)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+1,<sp/>j-1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+0,<sp/>j-1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_local_feature_1a1c7b8087feb05f02b09eb1b536d443e6" kindref="member" tooltip="The current frame.">outputFrame_</ref>.at&lt;uchar&gt;(i-1,<sp/>j-1)<sp/>=<sp/>center;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filling<sp/>the<sp/>LBP<sp/>vector<sp/>with<sp/>frequency<sp/>values:<sp/>the<sp/>picture<sp/>is<sp/>divided<sp/>into<sp/>16<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>i/16;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>j/16;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>0)){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0]++;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>1)){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+59]++;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>2)){</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+2*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+2*59]++;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>3)){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+3*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+3*59]++;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>0)){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+4*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+4*59]++;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>1)){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+5*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+5*59]++;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>2)){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+6*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+6*59]++;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>3)){</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+7*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+7*59]++;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>0)){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+8*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+8*59]++;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>1)){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+9*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+9*59]++;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>2)){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+10*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+10*59]++;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>3)){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+11*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+11*59]++;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>0)){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+12*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+12*59]++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>1)){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+13*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+13*59]++;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>2)){</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+14*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+14*59]++;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>(c<sp/>==<sp/>3)){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>58;<sp/>i++){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform[i]<sp/>==<sp/>center)<sp/>{<ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[i+1+15*59]++;<sp/>tmp<sp/>=<sp/>1;}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[0+15*59]++;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_lbp_feature_1a96e42213e77e729c263236db12453bde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lbp_feature_1a96e42213e77e729c263236db12453bde" kindref="member" tooltip="Generate feature vector without using uniform patterns.">LbpFeature::ProcessWithoutUniformPatterns</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.rows-1;<sp/>i++)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/><ref refid="class_local_feature_1a585b0dc6e6184422c5563e80bff50ffa" kindref="member" tooltip="The current frame.">frame_</ref>.cols-1;<sp/>j++)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>center<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>lbp_center<sp/>=<sp/><ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i,j);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i-1,<sp/>j-1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>128;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i-1,<sp/>j+0)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>64;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i-1,<sp/>j+1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>32;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+0,<sp/>j+1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+1,<sp/>j+1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+1,<sp/>j+0)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+1,<sp/>j-1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_lbp_feature_1ab2bdc329e16e4126eccbbe4b8d4d44f5" kindref="member">grayFrame_</ref>.at&lt;uchar&gt;(i+0,<sp/>j-1)<sp/>&gt;<sp/>lbp_center)<sp/>center<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_local_feature_1a1c7b8087feb05f02b09eb1b536d443e6" kindref="member" tooltip="The current frame.">outputFrame_</ref>.at&lt;uchar&gt;(i-1,<sp/>j-1)<sp/>=<sp/>center;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filling<sp/>the<sp/>LBP<sp/>vector<sp/>with<sp/>frequency<sp/>values:<sp/>the<sp/>picture<sp/>is<sp/>divided<sp/>into<sp/>16<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>i/16;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>j/16;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_local_feature_1a8197cec0d029bac380885167df9f65e5" kindref="member" tooltip="Stores local features.">features</ref>[center<sp/>+<sp/>(r<sp/>*<sp/>4<sp/>+<sp/>c)<sp/>*<sp/>256]++;<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_lbp_feature_1a152c1785ca51eb7e5878c0d3f9309697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lbp_feature_1a152c1785ca51eb7e5878c0d3f9309697" kindref="member" tooltip="Implemented virtual method for displaying the output.">LbpFeature::DrawFeatures</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Code/huro-sift/Development/ObjectRecognition/FeatureExtractor/src/LbpFeature.cpp"/>
  </compounddef>
</doxygen>
